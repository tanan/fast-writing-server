/*
 * This file is generated by jOOQ.
 */
package spring.kotlin.jooq.generated.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import spring.kotlin.jooq.generated.jooq.tables.Contents;


/**
 * ミュージック
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentsRecord extends UpdatableRecordImpl<ContentsRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 2056288265;

    /**
     * Setter for <code>contents.id</code>. id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>contents.id</code>. id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>contents.lesson_id</code>. lesson id
     */
    public void setLessonId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>contents.lesson_id</code>. lesson id
     */
    public Integer getLessonId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>contents.jp_text</code>. japanese text
     */
    public void setJpText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>contents.jp_text</code>. japanese text
     */
    public String getJpText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>contents.en_text</code>. english text
     */
    public void setEnText(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>contents.en_text</code>. english text
     */
    public String getEnText() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Contents.CONTENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Contents.CONTENTS.LESSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Contents.CONTENTS.JP_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Contents.CONTENTS.EN_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getLessonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getJpText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEnText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLessonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getJpText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEnText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentsRecord value2(Integer value) {
        setLessonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentsRecord value3(String value) {
        setJpText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentsRecord value4(String value) {
        setEnText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentsRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContentsRecord
     */
    public ContentsRecord() {
        super(Contents.CONTENTS);
    }

    /**
     * Create a detached, initialised ContentsRecord
     */
    public ContentsRecord(Integer id, Integer lessonId, String jpText, String enText) {
        super(Contents.CONTENTS);

        set(0, id);
        set(1, lessonId);
        set(2, jpText);
        set(3, enText);
    }
}
