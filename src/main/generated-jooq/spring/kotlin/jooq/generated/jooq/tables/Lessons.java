/*
 * This file is generated by jOOQ.
 */
package spring.kotlin.jooq.generated.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import spring.kotlin.jooq.generated.jooq.DefaultSchema;
import spring.kotlin.jooq.generated.jooq.Indexes;
import spring.kotlin.jooq.generated.jooq.Keys;
import spring.kotlin.jooq.generated.jooq.tables.records.LessonsRecord;


/**
 * Lessons
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lessons extends TableImpl<LessonsRecord> {

    private static final long serialVersionUID = -1875057238;

    /**
     * The reference instance of <code>lessons</code>
     */
    public static final Lessons LESSONS = new Lessons();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LessonsRecord> getRecordType() {
        return LessonsRecord.class;
    }

    /**
     * The column <code>lessons.id</code>. id
     */
    public final TableField<LessonsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "id");

    /**
     * The column <code>lessons.title</code>. タイトル
     */
    public final TableField<LessonsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "タイトル");

    /**
     * The column <code>lessons.description</code>. 説明
     */
    public final TableField<LessonsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "説明");

    /**
     * Create a <code>lessons</code> table reference
     */
    public Lessons() {
        this(DSL.name("lessons"), null);
    }

    /**
     * Create an aliased <code>lessons</code> table reference
     */
    public Lessons(String alias) {
        this(DSL.name(alias), LESSONS);
    }

    /**
     * Create an aliased <code>lessons</code> table reference
     */
    public Lessons(Name alias) {
        this(alias, LESSONS);
    }

    private Lessons(Name alias, Table<LessonsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lessons(Name alias, Table<LessonsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Lessons"));
    }

    public <O extends Record> Lessons(Table<O> child, ForeignKey<O, LessonsRecord> key) {
        super(child, key, LESSONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LESSONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LessonsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LESSONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LessonsRecord> getPrimaryKey() {
        return Keys.KEY_LESSONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LessonsRecord>> getKeys() {
        return Arrays.<UniqueKey<LessonsRecord>>asList(Keys.KEY_LESSONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lessons as(String alias) {
        return new Lessons(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lessons as(Name alias) {
        return new Lessons(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lessons rename(String name) {
        return new Lessons(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lessons rename(Name name) {
        return new Lessons(name, null);
    }
}
