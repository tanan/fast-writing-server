/*
 * This file is generated by jOOQ.
 */
package spring.kotlin.jooq.generated.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import spring.kotlin.jooq.generated.jooq.tables.Contents;
import spring.kotlin.jooq.generated.jooq.tables.Lessons;
import spring.kotlin.jooq.generated.jooq.tables.UserDefinedContents;
import spring.kotlin.jooq.generated.jooq.tables.UserDefinedLessons;
import spring.kotlin.jooq.generated.jooq.tables.Users;
import spring.kotlin.jooq.generated.jooq.tables.records.ContentsRecord;
import spring.kotlin.jooq.generated.jooq.tables.records.LessonsRecord;
import spring.kotlin.jooq.generated.jooq.tables.records.UserDefinedContentsRecord;
import spring.kotlin.jooq.generated.jooq.tables.records.UserDefinedLessonsRecord;
import spring.kotlin.jooq.generated.jooq.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ContentsRecord, Integer> IDENTITY_CONTENTS = Identities0.IDENTITY_CONTENTS;
    public static final Identity<LessonsRecord, Integer> IDENTITY_LESSONS = Identities0.IDENTITY_LESSONS;
    public static final Identity<UsersRecord, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;
    public static final Identity<UserDefinedContentsRecord, Integer> IDENTITY_USER_DEFINED_CONTENTS = Identities0.IDENTITY_USER_DEFINED_CONTENTS;
    public static final Identity<UserDefinedLessonsRecord, Integer> IDENTITY_USER_DEFINED_LESSONS = Identities0.IDENTITY_USER_DEFINED_LESSONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContentsRecord> KEY_CONTENTS_PRIMARY = UniqueKeys0.KEY_CONTENTS_PRIMARY;
    public static final UniqueKey<LessonsRecord> KEY_LESSONS_PRIMARY = UniqueKeys0.KEY_LESSONS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;
    public static final UniqueKey<UserDefinedContentsRecord> KEY_USER_DEFINED_CONTENTS_PRIMARY = UniqueKeys0.KEY_USER_DEFINED_CONTENTS_PRIMARY;
    public static final UniqueKey<UserDefinedLessonsRecord> KEY_USER_DEFINED_LESSONS_PRIMARY = UniqueKeys0.KEY_USER_DEFINED_LESSONS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ContentsRecord, LessonsRecord> FK_LESSON_ID = ForeignKeys0.FK_LESSON_ID;
    public static final ForeignKey<UserDefinedContentsRecord, UserDefinedLessonsRecord> FK_USER_DEFINED_LESSON_ID = ForeignKeys0.FK_USER_DEFINED_LESSON_ID;
    public static final ForeignKey<UserDefinedLessonsRecord, UsersRecord> FK_USER_ID = ForeignKeys0.FK_USER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ContentsRecord, Integer> IDENTITY_CONTENTS = Internal.createIdentity(Contents.CONTENTS, Contents.CONTENTS.ID);
        public static Identity<LessonsRecord, Integer> IDENTITY_LESSONS = Internal.createIdentity(Lessons.LESSONS, Lessons.LESSONS.ID);
        public static Identity<UsersRecord, Integer> IDENTITY_USERS = Internal.createIdentity(Users.USERS, Users.USERS.ID);
        public static Identity<UserDefinedContentsRecord, Integer> IDENTITY_USER_DEFINED_CONTENTS = Internal.createIdentity(UserDefinedContents.USER_DEFINED_CONTENTS, UserDefinedContents.USER_DEFINED_CONTENTS.ID);
        public static Identity<UserDefinedLessonsRecord, Integer> IDENTITY_USER_DEFINED_LESSONS = Internal.createIdentity(UserDefinedLessons.USER_DEFINED_LESSONS, UserDefinedLessons.USER_DEFINED_LESSONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ContentsRecord> KEY_CONTENTS_PRIMARY = Internal.createUniqueKey(Contents.CONTENTS, "KEY_contents_PRIMARY", Contents.CONTENTS.ID);
        public static final UniqueKey<LessonsRecord> KEY_LESSONS_PRIMARY = Internal.createUniqueKey(Lessons.LESSONS, "KEY_lessons_PRIMARY", Lessons.LESSONS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.ID);
        public static final UniqueKey<UserDefinedContentsRecord> KEY_USER_DEFINED_CONTENTS_PRIMARY = Internal.createUniqueKey(UserDefinedContents.USER_DEFINED_CONTENTS, "KEY_user_defined_contents_PRIMARY", UserDefinedContents.USER_DEFINED_CONTENTS.ID);
        public static final UniqueKey<UserDefinedLessonsRecord> KEY_USER_DEFINED_LESSONS_PRIMARY = Internal.createUniqueKey(UserDefinedLessons.USER_DEFINED_LESSONS, "KEY_user_defined_lessons_PRIMARY", UserDefinedLessons.USER_DEFINED_LESSONS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ContentsRecord, LessonsRecord> FK_LESSON_ID = Internal.createForeignKey(spring.kotlin.jooq.generated.jooq.Keys.KEY_LESSONS_PRIMARY, Contents.CONTENTS, "fk_lesson_id", Contents.CONTENTS.LESSON_ID);
        public static final ForeignKey<UserDefinedContentsRecord, UserDefinedLessonsRecord> FK_USER_DEFINED_LESSON_ID = Internal.createForeignKey(spring.kotlin.jooq.generated.jooq.Keys.KEY_USER_DEFINED_LESSONS_PRIMARY, UserDefinedContents.USER_DEFINED_CONTENTS, "fk_user_defined_lesson_id", UserDefinedContents.USER_DEFINED_CONTENTS.USER_DEFINED_LESSON_ID);
        public static final ForeignKey<UserDefinedLessonsRecord, UsersRecord> FK_USER_ID = Internal.createForeignKey(spring.kotlin.jooq.generated.jooq.Keys.KEY_USERS_PRIMARY, UserDefinedLessons.USER_DEFINED_LESSONS, "fk_user_id", UserDefinedLessons.USER_DEFINED_LESSONS.USER_ID);
    }
}
