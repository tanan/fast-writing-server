buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.maeharin:factlin:0.3.0'
		classpath 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.2.71'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
	id 'nu.studer.jooq' version '3.0.2'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'factlin'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

sourceSets {
	main.kotlin.srcDirs += 'src/main/kotlin'
	main.kotlin.srcDirs += 'src/main/generated-jooq'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'io.jsonwebtoken:jjwt:0.9.0'
	runtimeOnly 'mysql:mysql-connector-java:8.0.15'

	implementation 'org.jooq:jooq'
	implementation 'org.jooq:jooq-parent'
	implementation 'org.jooq:jooq-meta'
	implementation 'org.jooq:jooq-codegen'
	implementation 'org.jooq:jooq-meta-extensions'
	implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'

	jooqRuntime 'mysql:mysql-connector-java:8.0.15'
	jooqRuntime 'javax.activation:activation:1.1.1'
	jooqRuntime 'javax.xml.bind:jaxb-api:2.3.0'
	jooqRuntime 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	jooqRuntime 'com.sun.xml.bind:jaxb-impl:2.3.0.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.ninja-squad:DbSetup-kotlin:2.1.0'
	testImplementation 'org.assertj:assertj-db:1.2.0'

	// junit5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'

	// factlin
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.1.2'

	// MockK
	testImplementation "io.mockk:mockk:1.9.2"
}

jooq {
	version = '3.11.7'
	edition = 'OSS'
	fast_writing(sourceSets.main) {
		jdbc {
			driver = 'com.mysql.cj.jdbc.Driver'
			url = 'jdbc:mysql://fast-writing-db:3306/fast_writing?nullNamePatternMatchesAll=true&createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false'
			user = 'root'
			password = 'secret'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			database {
				name = 'org.jooq.meta.mysql.MySQLDatabase'
				inputSchema = 'fast_writing'
				outputSchemaToDefault = true
				forcedTypes {
					forcedType {
						name = 'DECIMAL'
						userType = 'java.math.BigDecimal'
						types = 'DECIMAL'
					}
				}
			}
			generate {
				javaTimeTypes = true
			}
			target {
				packageName = 'spring.kotlin.jooq.generated.jooq'
				directory = 'src/main/generated-jooq/'
			}
		}
	}
}

generateFast_writingJooqSchemaSource.onlyIf { name != 'build' }

factlin {
	dbUrl = 'jdbc:mysql://127.0.0.1:3306/fast_writing'
	dbUser = 'root'
	dbPassword = 'secret'
	dbDialect = "mariadb"
	fixtureOutputDir = "src/test/kotlin/com/example/springbootkotlinjooq/common/fixtures"
	fixturePackageName = "com.example.sprigbootkotlinjooq.common.fixtures"
	schema = "fast_writing"
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
